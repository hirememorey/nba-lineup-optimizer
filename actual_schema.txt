CREATE TABLE Games (
            game_id TEXT PRIMARY KEY,
            game_date TEXT NOT NULL,
            home_team_id INTEGER NOT NULL,
            away_team_id INTEGER NOT NULL,
            home_team_score INTEGER,
            away_team_score INTEGER,
            season TEXT NOT NULL,
            season_type TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, season_id TEXT,
            FOREIGN KEY (home_team_id) REFERENCES Teams(team_id),
            FOREIGN KEY (away_team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE Players (
            player_id INTEGER PRIMARY KEY,
            player_name TEXT NOT NULL,
            first_name TEXT NOT NULL,
            last_name TEXT NOT NULL,
            birth_date TEXT,
            country TEXT,
            height TEXT,
            weight INTEGER,
            jersey_number INTEGER,
            position TEXT,
            team_id INTEGER,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, wingspan REAL, draft_year TEXT, height_inches REAL,
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonRawStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            games_started INTEGER,
            minutes_played REAL,
            field_goals_made INTEGER,
            field_goals_attempted INTEGER,
            field_goal_percentage REAL,
            three_pointers_made INTEGER,
            three_pointers_attempted INTEGER,
            three_point_percentage REAL,
            free_throws_made INTEGER,
            free_throws_attempted INTEGER,
            free_throw_percentage REAL,
            offensive_rebounds INTEGER,
            defensive_rebounds INTEGER,
            total_rebounds INTEGER,
            assists INTEGER,
            steals INTEGER,
            blocks INTEGER,
            turnovers INTEGER,
            personal_fouls INTEGER,
            points INTEGER,
            plus_minus REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, avg_shot_distance REAL,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonAdvancedStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            age INTEGER,
            games_played INTEGER,
            wins INTEGER,
            losses INTEGER,
            win_percentage REAL,
            minutes_played REAL,
            offensive_rating REAL,
            defensive_rating REAL,
            net_rating REAL,
            assist_percentage REAL,
            assist_to_turnover_ratio REAL,
            assist_ratio REAL,
            offensive_rebound_percentage REAL,
            defensive_rebound_percentage REAL,
            rebound_percentage REAL,
            turnover_percentage REAL,
            effective_field_goal_percentage REAL,
            true_shooting_percentage REAL,
            usage_percentage REAL,
            pace REAL,
            pie REAL,
            possessions INTEGER,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonDriveStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, minutes_played REAL, drives REAL, drive_fgm REAL, drive_fga REAL, drive_fg_pct REAL, drive_ftm REAL, drive_fta REAL, drive_ft_pct REAL, drive_pts REAL, drive_passes REAL, drive_pass_pct REAL, drive_ast REAL, drive_ast_pct REAL, drive_tov REAL, drive_tov_pct REAL, drive_pf REAL, drive_pf_pct REAL, games_played INTEGER,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonHustleStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            minutes_played REAL,
            contested_shots INTEGER,
            contested_2pt_shots INTEGER,
            contested_3pt_shots INTEGER,
            deflections INTEGER,
            loose_balls_recovered INTEGER,
            charges_drawn INTEGER,
            screen_assists INTEGER,
            box_outs INTEGER,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, team_abbreviation TEXT, contested_shots_2pt REAL, contested_shots_3pt REAL, screen_ast_pts REAL, off_boxouts REAL, def_boxouts REAL,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonPassingStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            wins INTEGER,
            losses INTEGER,
            minutes_played REAL,
            passes_made REAL,
            passes_received REAL,
            assists INTEGER,
            free_throw_assists REAL,
            secondary_assists REAL,
            potential_assists REAL,
            assist_points_created REAL,
            assists_adjusted REAL,
            assist_to_pass_percentage REAL,
            assist_to_pass_percentage_adjusted REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonCatchAndShootStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            wins INTEGER,
            losses INTEGER,
            minutes_played REAL,
            catch_shoot_fgm REAL,
            catch_shoot_fga REAL,
            catch_shoot_fg_pct REAL,
            catch_shoot_3pm REAL,
            catch_shoot_3pa REAL,
            catch_shoot_3p_pct REAL,
            catch_shoot_efg_pct REAL,
            catch_shoot_pts REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonPullUpStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            wins INTEGER,
            losses INTEGER,
            minutes_played REAL,
            pull_up_fgm REAL,
            pull_up_fga REAL,
            pull_up_fg_pct REAL,
            pull_up_3pm REAL,
            pull_up_3pa REAL,
            pull_up_3p_pct REAL,
            pull_up_efg_pct REAL,
            pull_up_pts REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonOpponentShootingStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            player_name_api TEXT,
            team_code_api TEXT,
            age_api INTEGER,
            games_played INTEGER,
            avg_fg_attempted_against_per_game REAL,
            opp_fgm_lt_5ft REAL,
            opp_fga_lt_5ft REAL,
            opp_fg_pct_lt_5ft REAL,
            opp_fgm_5_9ft REAL,
            opp_fga_5_9ft REAL,
            opp_fg_pct_5_9ft REAL,
            opp_fgm_10_14ft REAL,
            opp_fga_10_14ft REAL,
            opp_fg_pct_10_14ft REAL,
            opp_fgm_15_19ft REAL,
            opp_fga_15_19ft REAL,
            opp_fg_pct_15_19ft REAL,
            opp_fgm_20_24ft REAL,
            opp_fga_20_24ft REAL,
            opp_fg_pct_20_24ft REAL,
            opp_fgm_25_29ft REAL,
            opp_fga_25_29ft REAL,
            opp_fg_pct_25_29ft REAL,
            opp_fgm_30_34ft REAL,
            opp_fga_30_34ft REAL,
            opp_fg_pct_30_34ft REAL,
            opp_fgm_35_39ft REAL,
            opp_fga_35_39ft REAL,
            opp_fg_pct_35_39ft REAL,
            opp_fgm_40_plus_ft REAL,
            opp_fga_40_plus_ft REAL,
            opp_fg_pct_40_plus_ft REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE overall_team_dashboard (
                game_id TEXT NOT NULL,
                team_id INTEGER NOT NULL,
                season TEXT NOT NULL,
                measure_type TEXT NOT NULL,
                group_set TEXT NOT NULL,
                group_value TEXT NOT NULL,
                GP INTEGER,
                W INTEGER,
                L INTEGER,
                W_PCT REAL,
                MIN REAL,
                FGM INTEGER,
                FGA INTEGER,
                FG_PCT REAL,
                FG3M INTEGER,
                FG3A INTEGER,
                FG3_PCT REAL,
                FTM INTEGER,
                FTA INTEGER,
                FT_PCT REAL,
                OREB INTEGER,
                DREB INTEGER,
                REB INTEGER,
                AST INTEGER,
                TOV INTEGER,
                STL INTEGER,
                BLK INTEGER,
                BLKA INTEGER,
                PF INTEGER,
                PFD INTEGER,
                PTS INTEGER,
                PLUS_MINUS REAL,
                GP_RANK INTEGER,
                W_RANK INTEGER,
                L_RANK INTEGER,
                W_PCT_RANK INTEGER,
                MIN_RANK INTEGER,
                FGM_RANK INTEGER,
                FGA_RANK INTEGER,
                FG_PCT_RANK INTEGER,
                FG3M_RANK INTEGER,
                FG3A_RANK INTEGER,
                FG3_PCT_RANK INTEGER,
                FTM_RANK INTEGER,
                FTA_RANK INTEGER,
                FT_PCT_RANK INTEGER,
                OREB_RANK INTEGER,
                DREB_RANK INTEGER,
                REB_RANK INTEGER,
                AST_RANK INTEGER,
                TOV_RANK INTEGER,
                STL_RANK INTEGER,
                BLK_RANK INTEGER,
                BLKA_RANK INTEGER,
                PF_RANK INTEGER,
                PFD_RANK INTEGER,
                PTS_RANK INTEGER,
                PLUS_MINUS_RANK INTEGER,
                E_OFF_RATING REAL,
                OFF_RATING_RANK INTEGER,
                E_DEF_RATING REAL,
                DEF_RATING_RANK INTEGER,
                E_NET_RATING REAL,
                NET_RATING_RANK INTEGER,
                AST_PCT REAL,
                AST_PCT_RANK INTEGER,
                AST_TO_TOV REAL,
                AST_TO_TOV_RANK INTEGER,
                AST_RATIO REAL,
                AST_RATIO_RANK INTEGER,
                OREB_PCT REAL,
                OREB_PCT_RANK INTEGER,
                DREB_PCT REAL,
                DREB_PCT_RANK INTEGER,
                REB_PCT REAL,
                REB_PCT_RANK INTEGER,
                TOV_PCT REAL,
                TOV_PCT_RANK INTEGER,
                EFG_PCT REAL,
                EFG_PCT_RANK INTEGER,
                TS_PCT REAL,
                TS_PCT_RANK INTEGER,
                PACE REAL,
                PACE_RANK INTEGER,
                PIE REAL,
                PIE_RANK INTEGER,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (game_id, team_id, measure_type, group_set, group_value),
                FOREIGN KEY (game_id) REFERENCES Games(game_id),
                FOREIGN KEY (team_id) REFERENCES Teams(team_id)
            );
CREATE TABLE location_team_dashboard (
                game_id TEXT NOT NULL,
                team_id INTEGER NOT NULL,
                season TEXT NOT NULL,
                measure_type TEXT NOT NULL,
                group_set TEXT NOT NULL,
                group_value TEXT NOT NULL,
                GP INTEGER,
                W INTEGER,
                L INTEGER,
                W_PCT REAL,
                MIN REAL,
                FGM INTEGER,
                FGA INTEGER,
                FG_PCT REAL,
                FG3M INTEGER,
                FG3A INTEGER,
                FG3_PCT REAL,
                FTM INTEGER,
                FTA INTEGER,
                FT_PCT REAL,
                OREB INTEGER,
                DREB INTEGER,
                REB INTEGER,
                AST INTEGER,
                TOV INTEGER,
                STL INTEGER,
                BLK INTEGER,
                BLKA INTEGER,
                PF INTEGER,
                PFD INTEGER,
                PTS INTEGER,
                PLUS_MINUS REAL,
                GP_RANK INTEGER,
                W_RANK INTEGER,
                L_RANK INTEGER,
                W_PCT_RANK INTEGER,
                MIN_RANK INTEGER,
                FGM_RANK INTEGER,
                FGA_RANK INTEGER,
                FG_PCT_RANK INTEGER,
                FG3M_RANK INTEGER,
                FG3A_RANK INTEGER,
                FG3_PCT_RANK INTEGER,
                FTM_RANK INTEGER,
                FTA_RANK INTEGER,
                FT_PCT_RANK INTEGER,
                OREB_RANK INTEGER,
                DREB_RANK INTEGER,
                REB_RANK INTEGER,
                AST_RANK INTEGER,
                TOV_RANK INTEGER,
                STL_RANK INTEGER,
                BLK_RANK INTEGER,
                BLKA_RANK INTEGER,
                PF_RANK INTEGER,
                PFD_RANK INTEGER,
                PTS_RANK INTEGER,
                PLUS_MINUS_RANK INTEGER,
                E_OFF_RATING REAL,
                OFF_RATING_RANK INTEGER,
                E_DEF_RATING REAL,
                DEF_RATING_RANK INTEGER,
                E_NET_RATING REAL,
                NET_RATING_RANK INTEGER,
                AST_PCT REAL,
                AST_PCT_RANK INTEGER,
                AST_TO_TOV REAL,
                AST_TO_TOV_RANK INTEGER,
                AST_RATIO REAL,
                AST_RATIO_RANK INTEGER,
                OREB_PCT REAL,
                OREB_PCT_RANK INTEGER,
                DREB_PCT REAL,
                DREB_PCT_RANK INTEGER,
                REB_PCT REAL,
                REB_PCT_RANK INTEGER,
                TOV_PCT REAL,
                TOV_PCT_RANK INTEGER,
                EFG_PCT REAL,
                EFG_PCT_RANK INTEGER,
                TS_PCT REAL,
                TS_PCT_RANK INTEGER,
                PACE REAL,
                PACE_RANK INTEGER,
                PIE REAL,
                PIE_RANK INTEGER,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (game_id, team_id, measure_type, group_set, group_value),
                FOREIGN KEY (game_id) REFERENCES Games(game_id),
                FOREIGN KEY (team_id) REFERENCES Teams(team_id)
            );
CREATE TABLE wins_losses_team_dashboard (
                game_id TEXT NOT NULL,
                team_id INTEGER NOT NULL,
                season TEXT NOT NULL,
                measure_type TEXT NOT NULL,
                group_set TEXT NOT NULL,
                group_value TEXT NOT NULL,
                GP INTEGER,
                W INTEGER,
                L INTEGER,
                W_PCT REAL,
                MIN REAL,
                FGM INTEGER,
                FGA INTEGER,
                FG_PCT REAL,
                FG3M INTEGER,
                FG3A INTEGER,
                FG3_PCT REAL,
                FTM INTEGER,
                FTA INTEGER,
                FT_PCT REAL,
                OREB INTEGER,
                DREB INTEGER,
                REB INTEGER,
                AST INTEGER,
                TOV INTEGER,
                STL INTEGER,
                BLK INTEGER,
                BLKA INTEGER,
                PF INTEGER,
                PFD INTEGER,
                PTS INTEGER,
                PLUS_MINUS REAL,
                GP_RANK INTEGER,
                W_RANK INTEGER,
                L_RANK INTEGER,
                W_PCT_RANK INTEGER,
                MIN_RANK INTEGER,
                FGM_RANK INTEGER,
                FGA_RANK INTEGER,
                FG_PCT_RANK INTEGER,
                FG3M_RANK INTEGER,
                FG3A_RANK INTEGER,
                FG3_PCT_RANK INTEGER,
                FTM_RANK INTEGER,
                FTA_RANK INTEGER,
                FT_PCT_RANK INTEGER,
                OREB_RANK INTEGER,
                DREB_RANK INTEGER,
                REB_RANK INTEGER,
                AST_RANK INTEGER,
                TOV_RANK INTEGER,
                STL_RANK INTEGER,
                BLK_RANK INTEGER,
                BLKA_RANK INTEGER,
                PF_RANK INTEGER,
                PFD_RANK INTEGER,
                PTS_RANK INTEGER,
                PLUS_MINUS_RANK INTEGER,
                E_OFF_RATING REAL,
                OFF_RATING_RANK INTEGER,
                E_DEF_RATING REAL,
                DEF_RATING_RANK INTEGER,
                E_NET_RATING REAL,
                NET_RATING_RANK INTEGER,
                AST_PCT REAL,
                AST_PCT_RANK INTEGER,
                AST_TO_TOV REAL,
                AST_TO_TOV_RANK INTEGER,
                AST_RATIO REAL,
                AST_RATIO_RANK INTEGER,
                OREB_PCT REAL,
                OREB_PCT_RANK INTEGER,
                DREB_PCT REAL,
                DREB_PCT_RANK INTEGER,
                REB_PCT REAL,
                REB_PCT_RANK INTEGER,
                TOV_PCT REAL,
                TOV_PCT_RANK INTEGER,
                EFG_PCT REAL,
                EFG_PCT_RANK INTEGER,
                TS_PCT REAL,
                TS_PCT_RANK INTEGER,
                PACE REAL,
                PACE_RANK INTEGER,
                PIE REAL,
                PIE_RANK INTEGER,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (game_id, team_id, measure_type, group_set, group_value),
                FOREIGN KEY (game_id) REFERENCES Games(game_id),
                FOREIGN KEY (team_id) REFERENCES Teams(team_id)
            );
CREATE TABLE month_team_dashboard (
                game_id TEXT NOT NULL,
                team_id INTEGER NOT NULL,
                season TEXT NOT NULL,
                measure_type TEXT NOT NULL,
                group_set TEXT NOT NULL,
                group_value TEXT NOT NULL,
                GP INTEGER,
                W INTEGER,
                L INTEGER,
                W_PCT REAL,
                MIN REAL,
                FGM INTEGER,
                FGA INTEGER,
                FG_PCT REAL,
                FG3M INTEGER,
                FG3A INTEGER,
                FG3_PCT REAL,
                FTM INTEGER,
                FTA INTEGER,
                FT_PCT REAL,
                OREB INTEGER,
                DREB INTEGER,
                REB INTEGER,
                AST INTEGER,
                TOV INTEGER,
                STL INTEGER,
                BLK INTEGER,
                BLKA INTEGER,
                PF INTEGER,
                PFD INTEGER,
                PTS INTEGER,
                PLUS_MINUS REAL,
                GP_RANK INTEGER,
                W_RANK INTEGER,
                L_RANK INTEGER,
                W_PCT_RANK INTEGER,
                MIN_RANK INTEGER,
                FGM_RANK INTEGER,
                FGA_RANK INTEGER,
                FG_PCT_RANK INTEGER,
                FG3M_RANK INTEGER,
                FG3A_RANK INTEGER,
                FG3_PCT_RANK INTEGER,
                FTM_RANK INTEGER,
                FTA_RANK INTEGER,
                FT_PCT_RANK INTEGER,
                OREB_RANK INTEGER,
                DREB_RANK INTEGER,
                REB_RANK INTEGER,
                AST_RANK INTEGER,
                TOV_RANK INTEGER,
                STL_RANK INTEGER,
                BLK_RANK INTEGER,
                BLKA_RANK INTEGER,
                PF_RANK INTEGER,
                PFD_RANK INTEGER,
                PTS_RANK INTEGER,
                PLUS_MINUS_RANK INTEGER,
                E_OFF_RATING REAL,
                OFF_RATING_RANK INTEGER,
                E_DEF_RATING REAL,
                DEF_RATING_RANK INTEGER,
                E_NET_RATING REAL,
                NET_RATING_RANK INTEGER,
                AST_PCT REAL,
                AST_PCT_RANK INTEGER,
                AST_TO_TOV REAL,
                AST_TO_TOV_RANK INTEGER,
                AST_RATIO REAL,
                AST_RATIO_RANK INTEGER,
                OREB_PCT REAL,
                OREB_PCT_RANK INTEGER,
                DREB_PCT REAL,
                DREB_PCT_RANK INTEGER,
                REB_PCT REAL,
                REB_PCT_RANK INTEGER,
                TOV_PCT REAL,
                TOV_PCT_RANK INTEGER,
                EFG_PCT REAL,
                EFG_PCT_RANK INTEGER,
                TS_PCT REAL,
                TS_PCT_RANK INTEGER,
                PACE REAL,
                PACE_RANK INTEGER,
                PIE REAL,
                PIE_RANK INTEGER,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (game_id, team_id, measure_type, group_set, group_value),
                FOREIGN KEY (game_id) REFERENCES Games(game_id),
                FOREIGN KEY (team_id) REFERENCES Teams(team_id)
            );
CREATE TABLE pre_postallstar_team_dashboard (
                game_id TEXT NOT NULL,
                team_id INTEGER NOT NULL,
                season TEXT NOT NULL,
                measure_type TEXT NOT NULL,
                group_set TEXT NOT NULL,
                group_value TEXT NOT NULL,
                GP INTEGER,
                W INTEGER,
                L INTEGER,
                W_PCT REAL,
                MIN REAL,
                FGM INTEGER,
                FGA INTEGER,
                FG_PCT REAL,
                FG3M INTEGER,
                FG3A INTEGER,
                FG3_PCT REAL,
                FTM INTEGER,
                FTA INTEGER,
                FT_PCT REAL,
                OREB INTEGER,
                DREB INTEGER,
                REB INTEGER,
                AST INTEGER,
                TOV INTEGER,
                STL INTEGER,
                BLK INTEGER,
                BLKA INTEGER,
                PF INTEGER,
                PFD INTEGER,
                PTS INTEGER,
                PLUS_MINUS REAL,
                GP_RANK INTEGER,
                W_RANK INTEGER,
                L_RANK INTEGER,
                W_PCT_RANK INTEGER,
                MIN_RANK INTEGER,
                FGM_RANK INTEGER,
                FGA_RANK INTEGER,
                FG_PCT_RANK INTEGER,
                FG3M_RANK INTEGER,
                FG3A_RANK INTEGER,
                FG3_PCT_RANK INTEGER,
                FTM_RANK INTEGER,
                FTA_RANK INTEGER,
                FT_PCT_RANK INTEGER,
                OREB_RANK INTEGER,
                DREB_RANK INTEGER,
                REB_RANK INTEGER,
                AST_RANK INTEGER,
                TOV_RANK INTEGER,
                STL_RANK INTEGER,
                BLK_RANK INTEGER,
                BLKA_RANK INTEGER,
                PF_RANK INTEGER,
                PFD_RANK INTEGER,
                PTS_RANK INTEGER,
                PLUS_MINUS_RANK INTEGER,
                E_OFF_RATING REAL,
                OFF_RATING_RANK INTEGER,
                E_DEF_RATING REAL,
                DEF_RATING_RANK INTEGER,
                E_NET_RATING REAL,
                NET_RATING_RANK INTEGER,
                AST_PCT REAL,
                AST_PCT_RANK INTEGER,
                AST_TO_TOV REAL,
                AST_TO_TOV_RANK INTEGER,
                AST_RATIO REAL,
                AST_RATIO_RANK INTEGER,
                OREB_PCT REAL,
                OREB_PCT_RANK INTEGER,
                DREB_PCT REAL,
                DREB_PCT_RANK INTEGER,
                REB_PCT REAL,
                REB_PCT_RANK INTEGER,
                TOV_PCT REAL,
                TOV_PCT_RANK INTEGER,
                EFG_PCT REAL,
                EFG_PCT_RANK INTEGER,
                TS_PCT REAL,
                TS_PCT_RANK INTEGER,
                PACE REAL,
                PACE_RANK INTEGER,
                PIE REAL,
                PIE_RANK INTEGER,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (game_id, team_id, measure_type, group_set, group_value),
                FOREIGN KEY (game_id) REFERENCES Games(game_id),
                FOREIGN KEY (team_id) REFERENCES Teams(team_id)
            );
CREATE TABLE days_rest_team_dashboard (
                game_id TEXT NOT NULL,
                team_id INTEGER NOT NULL,
                season TEXT NOT NULL,
                measure_type TEXT NOT NULL,
                group_set TEXT NOT NULL,
                group_value TEXT NOT NULL,
                GP INTEGER,
                W INTEGER,
                L INTEGER,
                W_PCT REAL,
                MIN REAL,
                FGM INTEGER,
                FGA INTEGER,
                FG_PCT REAL,
                FG3M INTEGER,
                FG3A INTEGER,
                FG3_PCT REAL,
                FTM INTEGER,
                FTA INTEGER,
                FT_PCT REAL,
                OREB INTEGER,
                DREB INTEGER,
                REB INTEGER,
                AST INTEGER,
                TOV INTEGER,
                STL INTEGER,
                BLK INTEGER,
                BLKA INTEGER,
                PF INTEGER,
                PFD INTEGER,
                PTS INTEGER,
                PLUS_MINUS REAL,
                GP_RANK INTEGER,
                W_RANK INTEGER,
                L_RANK INTEGER,
                W_PCT_RANK INTEGER,
                MIN_RANK INTEGER,
                FGM_RANK INTEGER,
                FGA_RANK INTEGER,
                FG_PCT_RANK INTEGER,
                FG3M_RANK INTEGER,
                FG3A_RANK INTEGER,
                FG3_PCT_RANK INTEGER,
                FTM_RANK INTEGER,
                FTA_RANK INTEGER,
                FT_PCT_RANK INTEGER,
                OREB_RANK INTEGER,
                DREB_RANK INTEGER,
                REB_RANK INTEGER,
                AST_RANK INTEGER,
                TOV_RANK INTEGER,
                STL_RANK INTEGER,
                BLK_RANK INTEGER,
                BLKA_RANK INTEGER,
                PF_RANK INTEGER,
                PFD_RANK INTEGER,
                PTS_RANK INTEGER,
                PLUS_MINUS_RANK INTEGER,
                E_OFF_RATING REAL,
                OFF_RATING_RANK INTEGER,
                E_DEF_RATING REAL,
                DEF_RATING_RANK INTEGER,
                E_NET_RATING REAL,
                NET_RATING_RANK INTEGER,
                AST_PCT REAL,
                AST_PCT_RANK INTEGER,
                AST_TO_TOV REAL,
                AST_TO_TOV_RANK INTEGER,
                AST_RATIO REAL,
                AST_RATIO_RANK INTEGER,
                OREB_PCT REAL,
                OREB_PCT_RANK INTEGER,
                DREB_PCT REAL,
                DREB_PCT_RANK INTEGER,
                REB_PCT REAL,
                REB_PCT_RANK INTEGER,
                TOV_PCT REAL,
                TOV_PCT_RANK INTEGER,
                EFG_PCT REAL,
                EFG_PCT_RANK INTEGER,
                TS_PCT REAL,
                TS_PCT_RANK INTEGER,
                PACE REAL,
                PACE_RANK INTEGER,
                PIE REAL,
                PIE_RANK INTEGER,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (game_id, team_id, measure_type, group_set, group_value),
                FOREIGN KEY (game_id) REFERENCES Games(game_id),
                FOREIGN KEY (team_id) REFERENCES Teams(team_id)
            );
CREATE INDEX idx_games_date ON Games(game_date);
CREATE INDEX idx_games_season ON Games(season);
CREATE INDEX idx_games_home_team ON Games(home_team_id);
CREATE INDEX idx_games_away_team ON Games(away_team_id);
CREATE INDEX idx_player_stats_player ON PlayerSeasonRawStats(player_id);
CREATE INDEX idx_player_stats_season ON PlayerSeasonRawStats(season);
CREATE INDEX idx_advanced_stats_player ON PlayerSeasonAdvancedStats(player_id);
CREATE INDEX idx_advanced_stats_season ON PlayerSeasonAdvancedStats(season);
CREATE INDEX idx_overall_team_dashboard_game 
            ON overall_team_dashboard(game_id, team_id, measure_type, group_set)
            ;
CREATE INDEX idx_overall_team_dashboard_season 
            ON overall_team_dashboard(season, team_id, measure_type)
            ;
CREATE INDEX idx_location_team_dashboard_game 
            ON location_team_dashboard(game_id, team_id, measure_type, group_set)
            ;
CREATE INDEX idx_location_team_dashboard_season 
            ON location_team_dashboard(season, team_id, measure_type)
            ;
CREATE INDEX idx_wins_losses_team_dashboard_game 
            ON wins_losses_team_dashboard(game_id, team_id, measure_type, group_set)
            ;
CREATE INDEX idx_wins_losses_team_dashboard_season 
            ON wins_losses_team_dashboard(season, team_id, measure_type)
            ;
CREATE INDEX idx_month_team_dashboard_game 
            ON month_team_dashboard(game_id, team_id, measure_type, group_set)
            ;
CREATE INDEX idx_month_team_dashboard_season 
            ON month_team_dashboard(season, team_id, measure_type)
            ;
CREATE INDEX idx_pre_postallstar_team_dashboard_game 
            ON pre_postallstar_team_dashboard(game_id, team_id, measure_type, group_set)
            ;
CREATE INDEX idx_pre_postallstar_team_dashboard_season 
            ON pre_postallstar_team_dashboard(season, team_id, measure_type)
            ;
CREATE INDEX idx_days_rest_team_dashboard_game 
            ON days_rest_team_dashboard(game_id, team_id, measure_type, group_set)
            ;
CREATE INDEX idx_days_rest_team_dashboard_season 
            ON days_rest_team_dashboard(season, team_id, measure_type)
            ;
CREATE TRIGGER PlayerSeasonDriveStats_updated_at
    AFTER UPDATE ON PlayerSeasonDriveStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonDriveStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonPassingStats_updated_at
    AFTER UPDATE ON PlayerSeasonPassingStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonPassingStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonCatchAndShootStats_updated_at
    AFTER UPDATE ON PlayerSeasonCatchAndShootStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonCatchAndShootStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonPullUpStats_updated_at
    AFTER UPDATE ON PlayerSeasonPullUpStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonPullUpStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TABLE PlayerSeasonReboundingStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            minutes_played REAL,
            rebounds_offensive REAL,
            rebounds_defensive REAL,
            rebounds_total REAL,
            rebound_chances_offensive REAL,
            rebound_chances_defensive REAL,
            rebound_chances_total REAL,
            rebound_chance_pct_offensive REAL,
            rebound_chance_pct_defensive REAL,
            rebound_chance_pct_total REAL,
            contested_rebounds_offensive REAL,
            contested_rebounds_defensive REAL,
            contested_rebounds_total REAL,
            contested_rebound_pct_offensive REAL,
            contested_rebound_pct_defensive REAL,
            contested_rebound_pct_total REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonPostUpStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            minutes_played REAL,
            possessions REAL,
            frequency_pct REAL,
            points_per_possession REAL,
            points REAL,
            fgm REAL,
            fga REAL,
            fg_pct REAL,
            efg_pct REAL,
            ft_frequency_pct REAL,
            tov_frequency_pct REAL,
            sf_frequency_pct REAL,
            pass_frequency_pct REAL,
            assists REAL,
            assist_pct REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonPaintTouchStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            minutes_played REAL,
            paint_touches REAL,
            paint_touch_fga REAL,
            paint_touch_fgm REAL,
            paint_touch_fg_pct REAL,
            paint_touch_passes REAL,
            paint_touch_pass_pct REAL,
            paint_touch_ast REAL,
            paint_touch_ast_pct REAL,
            paint_touch_tov REAL,
            paint_touch_tov_pct REAL,
            paint_touch_pf REAL,
            paint_touch_pf_pct REAL,
            paint_touch_pts REAL,
            paint_touch_pts_pct REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, paint_touch_ftm REAL, paint_touch_fta REAL, paint_touch_ft_pct REAL, team_abbreviation TEXT, contested_shots REAL, contested_shots_2pt REAL, contested_shots_3pt REAL, charges_drawn REAL, deflections REAL, loose_balls_recovered REAL, screen_assists REAL, screen_ast_pts REAL, off_boxouts REAL, def_boxouts REAL, box_outs REAL,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonElbowTouchStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            games_played INTEGER,
            minutes_played REAL,
            elbow_touches REAL,
            elbow_touch_fga REAL,
            elbow_touch_fgm REAL,
            elbow_touch_fg_pct REAL,
            elbow_touch_passes REAL,
            elbow_touch_pass_pct REAL,
            elbow_touch_ast REAL,
            elbow_touch_ast_pct REAL,
            elbow_touch_tov REAL,
            elbow_touch_tov_pct REAL,
            elbow_touch_pf REAL,
            elbow_touch_pf_pct REAL,
            elbow_touch_pts REAL,
            elbow_touch_pts_pct REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TABLE PlayerSeasonTrackingTouchesStats (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            player_name_api TEXT,
            team_abbreviation_api TEXT,
            gp INTEGER,
            min REAL,
            points REAL,
            touches REAL,
            front_ct_touches REAL,
            time_of_poss REAL,
            avg_sec_per_touch REAL,
            avg_drib_per_touch REAL,
            elbow_touches REAL,
            post_touches REAL,
            paint_touches REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season, team_id),
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TRIGGER PlayerSeasonRawStats_updated_at
    AFTER UPDATE ON PlayerSeasonRawStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonRawStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonAdvancedStats_updated_at
    AFTER UPDATE ON PlayerSeasonAdvancedStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonAdvancedStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonHustleStats_updated_at
    AFTER UPDATE ON PlayerSeasonHustleStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonHustleStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonTrackingTouchesStats_updated_at
    AFTER UPDATE ON PlayerSeasonTrackingTouchesStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonTrackingTouchesStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonReboundingStats_updated_at
    AFTER UPDATE ON PlayerSeasonReboundingStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonReboundingStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonPostUpStats_updated_at
    AFTER UPDATE ON PlayerSeasonPostUpStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonPostUpStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonPaintTouchStats_updated_at
    AFTER UPDATE ON PlayerSeasonPaintTouchStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonPaintTouchStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonElbowTouchStats_updated_at
    AFTER UPDATE ON PlayerSeasonElbowTouchStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonElbowTouchStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TRIGGER PlayerSeasonOpponentShootingStats_updated_at
    AFTER UPDATE ON PlayerSeasonOpponentShootingStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerSeasonOpponentShootingStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE player_id = NEW.player_id AND season = NEW.season AND team_id = NEW.team_id;
    END;
CREATE TABLE PlayerLineupStats (
            group_id TEXT NOT NULL,
            group_name TEXT NOT NULL,
            team_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            gp INTEGER,
            w INTEGER,
            l INTEGER,
            w_pct REAL,
            min REAL,
            fgm REAL,
            fga REAL,
            fg_pct REAL,
            fg3m REAL,
            fg3a REAL,
            fg3_pct REAL,
            ftm REAL,
            fta REAL,
            ft_pct REAL,
            oreb REAL,
            dreb REAL,
            reb REAL,
            ast REAL,
            tov REAL,
            stl REAL,
            blk REAL,
            blka REAL,
            pf REAL,
            pfd REAL,
            pts REAL,
            plus_minus REAL,
            e_off_rating REAL,
            off_rating REAL,
            e_def_rating REAL,
            def_rating REAL,
            e_net_rating REAL,
            net_rating REAL,
            ast_pct REAL,
            ast_to REAL,
            ast_ratio REAL,
            oreb_pct REAL,
            dreb_pct REAL,
            reb_pct REAL,
            tm_tov_pct REAL,
            efg_pct REAL,
            ts_pct REAL,
            e_pace REAL,
            pace REAL,
            pace_per40 REAL,
            poss REAL,
            pie REAL,
            pts_off_tov REAL,
            pts_2nd_chance REAL,
            pts_fb REAL,
            pts_paint REAL,
            opp_pts_off_tov REAL,
            opp_pts_2nd_chance REAL,
            opp_pts_fb REAL,
            opp_pts_paint REAL,
            fta_rate REAL,
            opp_efg_pct REAL,
            opp_fta_rate REAL,
            opp_tov_pct REAL,
            opp_oreb_pct REAL,
            pct_fga_2pt REAL,
            pct_fga_3pt REAL,
            pct_pts_2pt REAL,
            pct_pts_2pt_mr REAL,
            pct_pts_3pt REAL,
            pct_pts_fb REAL,
            pct_pts_ft REAL,
            pct_pts_off_tov REAL,
            pct_pts_paint REAL,
            pct_ast_2pm REAL,
            pct_uast_2pm REAL,
            pct_ast_3pm REAL,
            pct_uast_3pm REAL,
            pct_ast_fgm REAL,
            pct_uast_fgm REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (group_id, team_id, season),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id)
        );
CREATE TRIGGER PlayerLineupStats_updated_at
    AFTER UPDATE ON PlayerLineupStats
    FOR EACH ROW
    BEGIN
        UPDATE PlayerLineupStats
        SET updated_at = CURRENT_TIMESTAMP
        WHERE lineup_id = NEW.lineup_id AND season = NEW.season;
    END;
CREATE TABLE PlayerShotChart (
            shot_id INTEGER PRIMARY KEY AUTOINCREMENT,
            player_id INTEGER NOT NULL,
            team_id INTEGER NOT NULL,
            game_id TEXT NOT NULL,
            season TEXT NOT NULL,
            action_type TEXT,
            event_type TEXT,
            shot_type TEXT,
            shot_zone_basic TEXT,
            shot_zone_area TEXT,
            shot_zone_range TEXT,
            shot_distance INTEGER,
            loc_x INTEGER,
            loc_y INTEGER,
            shot_made_flag INTEGER,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (player_id) REFERENCES Players(player_id),
            FOREIGN KEY (team_id) REFERENCES Teams(team_id),
            FOREIGN KEY (game_id) REFERENCES Games(game_id)
        );
CREATE TABLE sqlite_sequence(name,seq);
CREATE INDEX idx_shot_chart_player_season ON PlayerShotChart(player_id, season);
CREATE TABLE PlayerSeasonSkill (
            player_id INTEGER NOT NULL,
            season TEXT NOT NULL,
            player_name TEXT,
            team_abbreviation TEXT,
            offensive_darko REAL,
            defensive_darko REAL,
            darko REAL,
            offensive_epm REAL,
            defensive_epm REAL,
            epm REAL,
            offensive_raptor REAL,
            defensive_raptor REAL,
            raptor REAL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season),
            FOREIGN KEY (player_id) REFERENCES Players(player_id)
        );
CREATE TABLE Possessions (
            game_id TEXT NOT NULL,
            event_num INTEGER NOT NULL,
            event_type TEXT,
            event_action_type TEXT,
            period INTEGER,
            wc_time_string TEXT,
            pc_time_string TEXT,
            home_description TEXT,
            neutral_description TEXT,
            visitor_description TEXT,
            score TEXT,
            score_margin TEXT,
            person1_type TEXT,
            player1_id INTEGER,
            player1_name TEXT,
            player1_team_id INTEGER,
            player1_team_city TEXT,
            player1_team_nickname TEXT,
            player1_team_abbreviation TEXT,
            person2_type TEXT,
            player2_id INTEGER,
            player2_name TEXT,
            player2_team_id INTEGER,
            player2_team_city TEXT,
            player2_team_nickname TEXT,
            player2_team_abbreviation TEXT,
            person3_type TEXT,
            player3_id INTEGER,
            player3_name TEXT,
            player3_team_id INTEGER,
            player3_team_city TEXT,
            player3_team_nickname TEXT,
            player3_team_abbreviation TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, home_player_1_id INTEGER, home_player_2_id INTEGER, home_player_3_id INTEGER, home_player_4_id INTEGER, home_player_5_id INTEGER, away_player_1_id INTEGER, away_player_2_id INTEGER, away_player_3_id INTEGER, away_player_4_id INTEGER, away_player_5_id INTEGER, offensive_team_id INTEGER, defensive_team_id INTEGER,
            PRIMARY KEY (game_id, event_num),
            FOREIGN KEY (game_id) REFERENCES Games(game_id)
        );
CREATE TABLE Teams (
        team_id INTEGER PRIMARY KEY,
        team_name TEXT NOT NULL,
        team_abbreviation TEXT NOT NULL,
        team_code TEXT NOT NULL,
        team_city TEXT NOT NULL,
        team_conference TEXT NOT NULL,
        team_division TEXT NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    , abbreviation TEXT);
CREATE INDEX idx_teams_conference_division ON Teams(team_conference, team_division);
CREATE TRIGGER teams_updated_at
    AFTER UPDATE ON Teams
    BEGIN
        UPDATE Teams SET updated_at = CURRENT_TIMESTAMP
        WHERE team_id = NEW.team_id;
    END;
CREATE TABLE IF NOT EXISTS "PlayerSkills_old" (
            player_skill_id INTEGER PRIMARY KEY AUTOINCREMENT,
            player_id INTEGER,
            season_id TEXT,
            o_darko REAL,
            d_darko REAL,
            FOREIGN KEY (player_id) REFERENCES Players (player_id)
        );
CREATE TABLE Archetypes (
        archetype_id INTEGER PRIMARY KEY,
        archetype_name TEXT NOT NULL UNIQUE
    );
CREATE TABLE LineupSuperclusters (
        supercluster_id INTEGER PRIMARY KEY,
        supercluster_name TEXT NOT NULL UNIQUE
    );
CREATE TABLE IF NOT EXISTS "PlayerSeasonShootingZoneStats" (
"player_id" INTEGER,
  "player_name" TEXT,
  "team_id" INTEGER,
  "team_abbreviation" TEXT,
  "age" INTEGER,
  "nickname" TEXT,
  "season" TEXT,
  "fgm_restricted_area" REAL,
  "fga_restricted_area" REAL,
  "fg_pct_restricted_area" REAL,
  "fgm_in_the_paint_non_ra" REAL,
  "fga_in_the_paint_non_ra" REAL,
  "fg_pct_in_the_paint_non_ra" REAL,
  "fgm_mid_range" REAL,
  "fga_mid_range" REAL,
  "fg_pct_mid_range" REAL,
  "fgm_left_corner_3" REAL,
  "fga_left_corner_3" REAL,
  "fg_pct_left_corner_3" REAL,
  "fgm_right_corner_3" REAL,
  "fga_right_corner_3" REAL,
  "fg_pct_right_corner_3" REAL,
  "fgm_above_the_break_3" REAL,
  "fga_above_the_break_3" REAL,
  "fg_pct_above_the_break_3" REAL,
  "fgm_backcourt" REAL,
  "fga_backcourt" REAL,
  "fg_pct_backcourt" REAL,
  "fgm_corner_3" REAL,
  "fga_corner_3" REAL,
  "fg_pct_corner_3" REAL
);
CREATE TABLE IF NOT EXISTS "PlayerSeasonShootingRangeStats" (
"player_id" INTEGER,
  "player_name" TEXT,
  "team_id" TEXT,
  "team_abbreviation" TEXT,
  "age" TEXT,
  "nickname" TEXT,
  "season" TEXT,
  "fgm_lt_5ft" TEXT,
  "fga_lt_5ft" TEXT,
  "fg_pct_lt_5ft" TEXT,
  "fgm_5_9ft" TEXT,
  "fga_5_9ft" TEXT,
  "fg_pct_5_9ft" TEXT,
  "fgm_10_14ft" TEXT,
  "fga_10_14ft" TEXT,
  "fg_pct_10_14ft" TEXT,
  "fgm_15_19ft" TEXT,
  "fga_15_19ft" TEXT,
  "fg_pct_15_19ft" TEXT,
  "fgm_20_24ft" TEXT,
  "fga_20_24ft" TEXT,
  "fg_pct_20_24ft" TEXT,
  "fgm_25_29ft" TEXT,
  "fga_25_29ft" TEXT,
  "fg_pct_25_29ft" TEXT
);
CREATE TABLE IF NOT EXISTS "PlayerSalaries_old" (
"PlayerName" TEXT,
  "Salary" INTEGER
);
CREATE TABLE PlayerSkills (
        player_skill_id INTEGER PRIMARY KEY AUTOINCREMENT,
        player_id INTEGER NOT NULL,
        season_id TEXT NOT NULL,
        offensive_skill_rating REAL,
        defensive_skill_rating REAL,
        skill_metric_source TEXT NOT NULL,
        FOREIGN KEY (player_id) REFERENCES Players(player_id)
    );
CREATE TABLE PlayerSalaries (
        player_salary_id INTEGER PRIMARY KEY AUTOINCREMENT,
        player_id INTEGER NOT NULL,
        season_id TEXT NOT NULL,
        salary REAL,
        FOREIGN KEY (player_id) REFERENCES Players(player_id)
    );
CREATE TABLE IF NOT EXISTS "ArchetypeLineups" (
"archetype_lineup_id" TEXT,
  "season" TEXT,
  "total_minutes" REAL,
  "supercluster_id" INTEGER,
  "WPCT_PTS_FT" REAL,
  "WPCT_PTS_3PT" REAL,
  "WPCT_PTS_2PT" REAL,
  "WPCT_FGA_3PT" REAL,
  "WPCT_FGA_2PT" REAL,
  "WOPP_TOV_PCT" REAL,
  "WOPP_FTA_RATE" REAL,
  "WPACE" REAL
);
CREATE TABLE Parent (id INTEGER PRIMARY KEY);
CREATE TABLE Child (id INTEGER PRIMARY KEY, parent_id INTEGER, FOREIGN KEY(parent_id) REFERENCES Parent(id));
CREATE TABLE PlayerAnthroStats (
            player_id INTEGER PRIMARY KEY,
            wingspan_inches REAL,
            height_wo_shoes_inches REAL,
            height_w_shoes_inches REAL,
            weight_pounds REAL,
            standing_reach_inches REAL,
            body_fat_pct REAL,
            hand_length_inches REAL,
            hand_width_inches REAL,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (player_id) REFERENCES Players(player_id)
        );
CREATE TABLE PlayerSeasonDerivedShotStats (
    player_id INTEGER NOT NULL,
    season TEXT NOT NULL,
    avgdist REAL,
    zto3r REAL,
    thto10r REAL,
    tento16r REAL,
    sixtto3ptr REAL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (player_id, season),
    FOREIGN KEY (player_id) REFERENCES Players(player_id)
);
CREATE TABLE PlayerShotMetrics (
            player_id INTEGER,
            season TEXT,
            avgdist REAL,
            zto3r REAL,
            thto10r REAL,
            tento16r REAL,
            sixtto3ptr REAL,
            total_shots INTEGER,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (player_id, season),
            FOREIGN KEY (player_id) REFERENCES Players(player_id)
        );
CREATE TABLE IF NOT EXISTS "PlayerArchetypeFeatures" (
"player_id" INTEGER,
  "FTPCT" REAL,
  "TSPCT" REAL,
  "THPAr" REAL,
  "FTr" REAL,
  "TRBPCT" REAL,
  "ASTPCT" REAL,
  "AVGDIST" REAL,
  "Zto3r" REAL,
  "THto10r" REAL,
  "TENto16r" REAL,
  "SIXTto3PTr" REAL,
  "HEIGHT" REAL,
  "WINGSPAN" REAL,
  "FRNTCTTCH" REAL,
  "TOP" REAL,
  "AVGSECPERTCH" REAL,
  "AVGDRIBPERTCH" REAL,
  "ELBWTCH" REAL,
  "POSTUPS" REAL,
  "PNTTOUCH" REAL,
  "DRIVES" REAL,
  "DRFGA" REAL,
  "DRPTSPCT" REAL,
  "DRPASSPCT" REAL,
  "DRASTPCT" REAL,
  "DRTOVPCT" REAL,
  "DRPFPCT" REAL,
  "DRIMFGPCT" REAL,
  "CSFGA" REAL,
  "CS3PA" REAL,
  "PASSESMADE" REAL,
  "SECAST" REAL,
  "POTAST" REAL,
  "PUFGA" REAL,
  "PU3PA" REAL,
  "PSTUPFGA" REAL,
  "PSTUPPTSPCT" REAL,
  "PSTUPPASSPCT" REAL,
  "PSTUPASTPCT" REAL,
  "PSTUPTOVPCT" REAL,
  "PNTTCHS" REAL,
  "PNTFGA" REAL,
  "PNTPTSPCT" REAL,
  "PNTPASSPCT" REAL,
  "PNTASTPCT" REAL,
  "PNTTVPCT" REAL,
  "AVGFGATTEMPTEDAGAINSTPERGAME" REAL,
  "season" TEXT
);
CREATE TABLE IF NOT EXISTS "PlayerSeasonArchetypes" (
"player_id" INTEGER,
  "season" TEXT,
  "archetype_id" INTEGER
);
